# Generic security enhancements. Use https://securityheaders.io to test
# and recommend further improvements.

# Hide Nginx version in error messages and reponse headers.
server_tokens off;

# Don't allow pages to be rendered in an iframe on external domains.
add_header X-Frame-Options "SAMEORIGIN" always;

# MIME sniffing prevention
add_header X-Content-Type-Options "nosniff" always;

# Enable cross-site scripting filter in supported browsers.
add_header X-Xss-Protection "1; mode=block" always;

# Good for development (to comment for production)
# This header will prevent search engines from indexing your https pages
add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";

# Whitelist sources which are allowed to load assets (JS, CSS, etc). The following will block
# only none HTTPS assets, but check out https://scotthelme.co.uk/content-security-policy-an-introduction/
# for an in-depth guide on creating a more restrictive policy.
# add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;

# Security headers
add_header Referrer-Policy "strict-origin-when-cross-origin";
add_header Permissions-Policy "geolocation=(self), microphone=()";

# set $SCP_DEFAULT "default-src 'self' *.example.com";
# set $SCP_SCRIPT "script-src 'self' *.example.com 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://ssl.google-analytics.com https://connect.facebook.net";
# set $SCP_STYLE "style-src 'self' *.example.com 'unsafe-inline' https://fonts.googleapis.com";
# set $SCP_IMG "img-src data: https: https://www.google-analytics.com";
# set $SCP_FONT "font-src 'self' *.example.com data: https://fonts.gstatic.com";
# set $SCP_CONNECT "connect-src 'self' *.example.com https://www.google-analytics.com";
# set $SCP_FRAME "frame-src 'self' *.example.com https://www.youtube.com";
# add_header Content-Security-Policy "${SCP_DEFAULT}; ${SCP_SCRIPT}; ${SCP_STYLE}; ${SCP_IMG}; ${SCP_FONT}; ${SCP_CONNECT}; ${SCP_FRAME};";
