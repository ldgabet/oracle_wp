fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

set $skip_cache 0;

# POST requests and urls with a query string should always go to PHP
if ($request_method = POST) {
   set $skip_cache 1;
}
if ($query_string != "") {
   set $skip_cache 1;
}

# Don't cache uris containing the following segments
if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl)") {
   set $skip_cache 1;
}

# Don't use the cache for logged in users or recent commenters
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
   set $skip_cache 1;
}

# To skip cache for a specific IP
# if ($remote_addr ~* "12.34.56.78|12.34.56.79") {
#   set $skip_cache 1;
# }

# Show the cache status in server responses.
add_header Fastcgi-Cache $upstream_cache_status;

location ~ /purge(/.*) {
   fastcgi_cache_purge phpcache "$scheme$request_method$host$1";
}
	
location / {
   try_files $uri $uri/ /index.php?$args;
   gzip_static on; # this directive is not required but recommended
}

location ~ \.php$ {
   try_files $uri =404;
   include global/fastcgi.conf;

   # Change socket if using PHP pools or PHP 5
   fastcgi_pass  php-fpm:9000;

   # To allow timeout
   # fastcgi_read_timeout 300;

   fastcgi_cache_bypass $skip_cache;
   fastcgi_no_cache $skip_cache;

   fastcgi_cache phpcache;
   fastcgi_cache_valid 200 301 302 60m;
   fastcgi_cache_min_uses 1;
   fastcgi_cache_lock on;
}
